diff --git a/build.gradle b/build.gradle
index a942a18..c84fd36 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,35 +1,8 @@
-buildscript {
-    repositories {
-        mavenCentral()
-        jcenter()
-        maven { url 'https://plugins.gradle.org/m2/' }
-    }
-    dependencies {
-        classpath 'net.ltgt.gradle:gradle-apt-plugin:0.10'
-        classpath 'com.google.gradle:osdetector-gradle-plugin:1.4.0'
-        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE'
-    }
-}
-
 apply plugin: 'java'
 apply plugin: 'idea'
 apply plugin: 'eclipse'
 apply plugin: 'maven'
-apply plugin: 'com.google.osdetector'
-apply plugin: 'net.ltgt.apt'
-apply plugin: 'org.springframework.boot'
 
-def versionOf = { project.property("${it}.version") }
-
-def onIdeImport = { Closure action ->
-    if (System.getProperty('idea.active') == 'true' ||
-        System.getProperty('eclipse.home.location') != null) {
-        project.afterEvaluate {
-            action.delegate = project
-            action()
-        }
-    }
-}
 archivesBaseName = project.name
 
 repositories {
@@ -48,56 +21,7 @@ tasks.withType(JavaCompile) {
 
 dependencies {
     compile 'com.linecorp.armeria:armeria-spring-boot-starter-shaded:0.47.0'
-    compile 'com.linecorp.armeria:armeria-thrift-shaded:0.47.0'
-    compile "com.linecorp.armeria:armeria-tomcat-shaded:0.47.0"
-
-    apt 'org.springframework.boot:spring-boot-configuration-processor'
-    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
-
-    compile 'org.springframework.boot:spring-boot-starter-web'
-    compile 'org.springframework.boot:spring-boot-starter-logging'
-}
+    compile 'org.springframework.boot:spring-boot-starter'
 
-// Delete the source files generated by the Thrift compiler.
-clean {
-    [ 'main', 'test' ].each {
-        delete "${project.projectDir}/src/$it/gen-java"
-    }
+    testCompile 'junit:junit:4.12'
 }
-
-// Compile the Thrift service definitions.
-task compileThrift(group: 'Build',
-                   description: 'Compiles the .thrift files') {
-    def thriftPath = "${rootProject.projectDir}/thrift/thrift.${osdetector.classifier}"
-
-    [ 'main', 'test' ].each { scope ->
-        def inputDir = "${project.projectDir}/src/${scope}/thrift"
-        def outputDir = "${project.projectDir}/src/${scope}/gen-java"
-
-        if (project.file(inputDir).isDirectory()) {
-            inputs.dir inputDir
-            outputs.dir outputDir
-
-            project.sourceSets[scope].java.srcDir outputDir
-
-            doLast {
-                project.fileTree(inputDir) {
-                    include '**/*.thrift'
-                }.each { sourceFile ->
-                    project.mkdir(outputDir)
-                    project.exec {
-                        commandLine thriftPath,
-                                '-gen', 'java',
-                                '-out', outputDir,
-                                '-I', "${sourceFile.parentFile.absolutePath}",
-                                sourceFile.absolutePath
-                    }
-                }
-            }
-        }
-    }
-}
-
-// Ensure the generated Thrift source files are available during the build.
-project.tasks.compileJava.dependsOn(tasks.compileThrift)
-onIdeImport { project.tasks.compileThrift.execute() }
